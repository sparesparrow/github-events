# GitHub Events Monitor Configuration

# GitHub API Settings
GITHUB_TOKEN=your_github_personal_access_token_here
GITHUB_API_BASE=https://api.github.com
USER_AGENT=GitHub-Events-Monitor/1.0

# Target Repositories (comma-separated list, e.g., "owner/repo1,owner/repo2")
# Leave empty to collect from all public events
TARGET_REPOSITORIES=sparesparrow/github-events,sparesparrow/mcp-prompts

# Database Settings
DATABASE_PROVIDER=sqlite  # "sqlite" or "dynamodb"

# SQLite Configuration (when DATABASE_PROVIDER=sqlite)
DATABASE_PATH=github_events.db

# DynamoDB Configuration (when DATABASE_PROVIDER=dynamodb)
AWS_REGION=us-east-1
DYNAMODB_TABLE_PREFIX=github-events-
DYNAMODB_ENDPOINT_URL=  # For local DynamoDB: http://localhost:8000
AWS_ACCESS_KEY_ID=  # Optional if using IAM roles
AWS_SECRET_ACCESS_KEY=  # Optional if using IAM roles

# Polling Settings  
POLL_INTERVAL=300  # seconds (5 minutes)
MAX_EVENTS_PER_FETCH=  # leave empty for no limit

# API Server Settings
API_HOST=0.0.0.0
API_PORT=8000
API_DEBUG=false

# MCP Server Settings
MCP_TRANSPORT=stdio

# Logging Settings
LOG_LEVEL=INFO
LOG_FILE=  # leave empty to log only to console

# Cache Settings
ENABLE_CACHING=true
CACHE_TTL=300  # seconds

# MCP Postgres (read-only) for Model Context Protocol integration
# Provide a read-only connection string, e.g.:
# POSTGRES_URL_READONLY=postgresql://readonly_user:readonly_pass@localhost:5432/mydb
#POSTGRES_URL_READONLY=

# AWS Deployment (Guidance â€” prefer GitHub Secrets for credentials)
# S3 static site target (used by GitHub Actions aws_deploy.yml)
#S3_BUCKET=
#AWS_REGION=us-east-1
# Optional CloudFront distribution for CDN and cache invalidation
#CLOUDFRONT_DISTRIBUTION_ID=

# NOTE: Do NOT commit real credentials. Store these in GitHub Secrets instead:
# - AWS_ACCESS_KEY_ID
# - AWS_SECRET_ACCESS_KEY
