name: Update GitHub Events Database (scheduled)

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  update-db:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install -e .

      - name: Initialize and update DB via source modules
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATABASE_PATH: github_events.db
        run: |
          python - <<'PY'
          import asyncio
          from src.github_events_monitor.collector import GitHubEventsCollector
          async def main():
              collector = GitHubEventsCollector('github_events.db', '${{ secrets.GITHUB_TOKEN }}')
              await collector.initialize_database()
              n = await collector.collect_and_store(limit=200)
              print(f'Collected {n} events')
          asyncio.run(main())
          PY

      - name: Upload DB artifact
        uses: actions/upload-artifact@v4
        with:
          name: github_events_db
          path: github_events.db


