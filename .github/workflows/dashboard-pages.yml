name: CI and Pages (Dashboard Export)

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'service/**'
      - 'mcp/**'
      - 'docs/**'
      - '.github/workflows/**'
      - 'requirements.txt'
      - 'database/**'

permissions:
  contents: write

jobs:
  export-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Initialize database schema
        run: |
          mkdir -p database
          if [ -f database/schema.sql ]; then
            sqlite3 database/events.db < database/schema.sql
          fi

      - name: One-time GitHub ingest (populate DB)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f service/github_monitor.py ]; then
            python service/github_monitor.py --once || true
          fi

      - name: Start API server
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CORS_ORIGINS: "*"
        run: |
          nohup python -m src.github_events_monitor.api > api.log 2>&1 &
          echo $! > api.pid

      - name: Wait for API to be ready
        run: |
          for i in {1..30}; do
            if curl -fsS http://localhost:8000/health >/dev/null; then
              echo "API is ready"
              break
            fi
            sleep 2
          done

      - name: Export dashboard HTML via MCP tool
        run: |
          python - <<'PY'
from mcp.dashboard_export_server import export_dashboard_html
out = export_dashboard_html(base_url="http://localhost:8000", include_plotlyjs="cdn", output_path="docs/index.html")
print(out)
PY

      - name: Stop API server
        if: always()
        run: |
          if [ -f api.pid ]; then
            kill $(cat api.pid) || true
          fi

      - name: Commit dashboard to docs/
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/
          git diff --staged --quiet && echo "No changes to commit" || git commit -m "chore(pages): export dashboard via MCP tool [skip ci]"
          git push
