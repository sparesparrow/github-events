[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
name = "github-events-monitor"
version = "0.1.0"
description = "GitHub Events Monitor with FastAPI and MCP server"
readme = "README.md"
requires-python = ">=3.11"
authors = [{ name = "Your Name", email = "you@example.com" }]
license = { text = "MIT" }
keywords = ["github", "events", "fastapi", "mcp", "monitoring"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Framework :: FastAPI",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

# Runtime dependencies
dependencies = [
  "httpx>=0.27.0",
  "aiosqlite>=0.19.0",
  "asyncio-pool>=0.6.0",
  "fastapi>=0.110.0",
  "uvicorn[standard]>=0.29.0",
  "pydantic>=2.6.0",
  "mcp>=1.0.0",
  "matplotlib>=3.8.0",
  "Pillow>=10.2.0",
  "uvloop>=0.19.0; sys_platform != 'win32'",
]

[project.optional-dependencies]
# For running tests: uvx -p 3.11 pytest
test = [
  "pytest>=8.0.0",
  "pytest-asyncio>=0.23.0",
  "pytest-mock>=3.12.0",
]
# Dev extras
dev = [
  "black>=24.0.0",
  "isort>=5.13.0",
  "flake8>=7.0.0",
  "mypy>=1.8.0",
]

[project.scripts]
# CLI entrypoints for uvx/console scripts
github-events-monitor-api = "github_events_monitor.api:run"
# Synchronous wrapper that runs asyncio main
github-events-monitor-mcp = "github_events_monitor.mcp_server:run"

[tool.hatch.build]
include = [
  "github_events_monitor/**/*.py",
  "README.md",
  "pytest.ini",
]

[tool.pytest.ini_options]
testpaths = ["github_events_monitor/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --tb=short --strict-markers"
markers = [
  "unit: Unit tests",
  "integration: Integration tests",
  "slow: Slow tests",
  "api: API tests",
  "mcp: MCP tests",
]

[tool.uv]
# Default Python and scripts for uv
python-preference = "only-managed"

[tool.uv.sources]
# Example: pin alternatives if needed

